// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: saveTrend.sql

package sqlc

import (
	"context"
)

const deleteTrend = `-- name: DeleteTrend :exec
DELETE FROM trends
`

func (q *Queries) DeleteTrend(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteTrend)
	return err
}

const getTrend = `-- name: GetTrend :many
SELECT trends_id, trends_name, trends_location, trends_rank, trends_endtimestamp, trends_increase_percentage FROM trends
`

func (q *Queries) GetTrend(ctx context.Context) ([]Trend, error) {
	rows, err := q.db.QueryContext(ctx, getTrend)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Trend{}
	for rows.Next() {
		var i Trend
		if err := rows.Scan(
			&i.TrendsID,
			&i.TrendsName,
			&i.TrendsLocation,
			&i.TrendsRank,
			&i.TrendsEndtimestamp,
			&i.TrendsIncreasePercentage,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const saveTrend = `-- name: SaveTrend :exec
INSERT INTO trends (trends_name,trends_location,trends_rank,trends_endtimestamp,trends_increase_percentage) VALUES (?, ?, ?, ?, ?)
`

type SaveTrendParams struct {
	TrendsName               string `json:"trends_name"`
	TrendsLocation           string `json:"trends_location"`
	TrendsRank               int32  `json:"trends_rank"`
	TrendsEndtimestamp       int32  `json:"trends_endtimestamp"`
	TrendsIncreasePercentage int32  `json:"trends_increase_percentage"`
}

func (q *Queries) SaveTrend(ctx context.Context, arg SaveTrendParams) error {
	_, err := q.db.ExecContext(ctx, saveTrend,
		arg.TrendsName,
		arg.TrendsLocation,
		arg.TrendsRank,
		arg.TrendsEndtimestamp,
		arg.TrendsIncreasePercentage,
	)
	return err
}
